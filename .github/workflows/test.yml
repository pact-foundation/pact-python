---
name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  STABLE_PYTHON_VERSION: '3.13'
  PYTEST_ADDOPTS: --color=yes
  HATCH_VERBOSE: '1'
  FORCE_COLOR: '1'

jobs:
  complete:
    name: Test completion check
    if: always()

    permissions:
      contents: none

    runs-on: ubuntu-latest
    needs:
      - test-linux
      - test-other
      - example
      - format
      - lint
      - typecheck
      - spelling
      - pre-commit

    steps:
      - name: Failed
        run: exit 1
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') || contains(needs.*.result,
          'skipped')

  test-linux:
    name: >-
      Test Python ${{ matrix.python-version }}
      on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    services:
      broker:
        image: pactfoundation/pact-broker:latest@sha256:05e813c53cbc4d5fadb34a608baaf17348a50c669dc1e3e94dad55e364609912
        ports:
          - 9292:9292
        env:
          # Basic auth credentials for the Broker
          PACT_BROKER_ALLOW_PUBLIC_READ: 'true'
          PACT_BROKER_BASIC_AUTH_USERNAME: pactbroker
          PACT_BROKER_BASIC_AUTH_PASSWORD: pactbroker
          # Database
          PACT_BROKER_DATABASE_URL: sqlite:////tmp/pact_broker.sqlite

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
        experimental:
          - false
        include:
            # Run tests against the next Python version, but no need for the full list of OSes.
          - os: ubuntu-latest
            python-version: '3.14'
            experimental: true

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          submodules: true

      - name: Apply temporary definitions update
        shell: bash
        run: |
          cd tests/v3/compatibility_suite
          patch -p1 -d definition < definition-update.diff

      - name: Set up uv
        uses: astral-sh/setup-uv@d8db0a86d3d88f3017a4e6b8a1e2b234e7a0a1b5  # v4.0.0
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Install Python
        run: uv python install ${{ matrix.python-version }}

      - name: Install Hatch
        run: uv tool install hatch

      - name: Ensure broker is live
        run: |
          i=0
          until curl -sSf http://localhost:9292/diagnostic/status/heartbeat; do
            i=$((i+1))
            if [ $i -gt 120 ]; then
              echo "Broker failed to start"
              exit 1
            fi
            sleep 1
          done

      - name: Run tests
        run: hatch run test --broker-url=http://pactbroker:pactbroker@localhost:9292 --container

      - name: Upload coverage
        if: matrix.python-version == env.STABLE_PYTHON_VERSION && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@015f24e6818733317a2da2edd6290ab26238649a  # v5.0.7
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: tests

  test-other:
    name: >-
      Test Python ${{ matrix.python-version }}
      on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
        # Python 3.9 aren't supported on macos-latest (ARM)
        exclude:
          - os: macos-latest
            python-version: '3.9'
        include:
          - os: macos-13
            python-version: '3.9'

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          submodules: true

      - name: Apply temporary definitions update
        shell: bash
        run: |
          cd tests/v3/compatibility_suite
          patch -p1 -d definition < definition-update.diff

      - name: Set up uv
        uses: astral-sh/setup-uv@d8db0a86d3d88f3017a4e6b8a1e2b234e7a0a1b5  # v4.0.0
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Install Python
        run: uv python install ${{ matrix.python-version }}

      - name: Install Hatch
        run: uv tool install hatch

      - name: Run tests
        run: hatch run test

  example:
    name: Example

    runs-on: ubuntu-latest
    if: github.event_name == 'push' || ! github.event.pull_request.draft

    services:
      broker:
        image: pactfoundation/pact-broker:latest@sha256:05e813c53cbc4d5fadb34a608baaf17348a50c669dc1e3e94dad55e364609912
        ports:
          - 9292:9292
        env:
          # Basic auth credentials for the Broker
          PACT_BROKER_ALLOW_PUBLIC_READ: 'true'
          PACT_BROKER_BASIC_AUTH_USERNAME: pactbroker
          PACT_BROKER_BASIC_AUTH_PASSWORD: pactbroker
          # Database
          PACT_BROKER_DATABASE_URL: sqlite:////tmp/pact_broker.sqlite

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up uv
        uses: astral-sh/setup-uv@d8db0a86d3d88f3017a4e6b8a1e2b234e7a0a1b5  # v4.0.0
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Install Python
        run: uv python install ${{ env.STABLE_PYTHON_VERSION }}

      - name: Install Hatch
        run: uv tool install hatch

      - name: Ensure broker is live
        run: |
          i=0
          until curl -sSf http://localhost:9292/diagnostic/status/heartbeat; do
            i=$((i+1))
            if [ $i -gt 120 ]; then
              echo "Broker failed to start"
              exit 1
            fi
            sleep 1
          done

      - name: Examples
        run: >
          hatch run example --broker-url=http://pactbroker:pactbroker@localhost:9292

      - name: Upload coverage
        uses: codecov/codecov-action@015f24e6818733317a2da2edd6290ab26238649a  # v5.0.7
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: examples

  format:
    name: Format

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up uv
        uses: astral-sh/setup-uv@d8db0a86d3d88f3017a4e6b8a1e2b234e7a0a1b5  # v4.0.0
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Install Python
        run: uv python install ${{ env.STABLE_PYTHON_VERSION }}

      - name: Install Hatch
        run: uv tool install hatch

      - name: Format
        run: hatch run format

  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up uv
        uses: astral-sh/setup-uv@d8db0a86d3d88f3017a4e6b8a1e2b234e7a0a1b5  # v4.0.0
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Install Python
        run: uv python install ${{ env.STABLE_PYTHON_VERSION }}

      - name: Install Hatch
        run: uv tool install hatch

      - name: Format
        run: hatch run lint

  typecheck:
    name: Typecheck

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up uv
        uses: astral-sh/setup-uv@d8db0a86d3d88f3017a4e6b8a1e2b234e7a0a1b5  # v4.0.0
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Install Python
        run: uv python install ${{ env.STABLE_PYTHON_VERSION }}

      - name: Install Hatch
        run: uv tool install hatch

      - name: Format
        run: hatch run typecheck

  spelling:
    name: Spell check

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Spell Check Repo   https://github.com/crate-ci/typos/commit/
        uses: crate-ci/typos@bd36f89fcd3424dcefd442894589e6ee572a59f2  # v1.28.1

  pre-commit:
    name: Pre-commit

    runs-on: ubuntu-latest

    env:
      PRE_COMMIT_HOME: ${{ github.workspace }}/.pre-commit

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PRE_COMMIT_HOME }}
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - name: Set up uv
        uses: astral-sh/setup-uv@d8db0a86d3d88f3017a4e6b8a1e2b234e7a0a1b5  # v4.0.0
        with:
          enable-cache: true
          cache-suffix: pre-commit
          cache-dependency-glob: ''

      - name: Install pre-commit
        run: uv tool install pre-commit

      - name: Run pre-commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files
