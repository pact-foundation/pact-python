name: build

on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  STABLE_PYTHON_VERSION: "3.12"
  HATCH_VERBOSE: "1"
  FORCE_COLOR: "1"
  CIBW_BUILD_FRONTEND: build

jobs:
  build-arm64:
    name: Build wheels on ${{ matrix.os }} (arm64)

    # As this requires emulation, it's not worth running on PRs or master
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            archs: ARM64
            build: ""

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          # Fetch all tags
          fetch-depth: 0

      - name: Cache pip packages
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          path: ~/.cache/pip
          key: ${{ github.workflow }}-pip-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ github.workflow }}-pip-${{ runner.os }}
            ${{ github.workflow }}-pip
            ${{ github.workflow }}

      - name: Set up QEMU
        if: startsWith(matrix.os, 'ubuntu-')
        uses: docker/setup-qemu-action@5927c834f5b4fdf503fca6f4c7eccda82949e1ee # v3
        with:
          platforms: arm64

      - name: Create wheels
        uses: pypa/cibuildwheel@7e5a838a63ac8128d71ab2dfd99e4634dd1bca09 # v2.19.2
        env:
          CIBW_ARCHS: ${{ matrix.archs }}
          CIBW_BUILD: ${{ matrix.build == '' && '*' || format('*{0}*', matrix.build) }}
          DEBUG: "1"

      - name: Upload wheels
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.archs }}-${{  matrix.build }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error
          compression-level: 0
